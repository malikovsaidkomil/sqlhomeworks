bulk insert tablename from 'c:\path\to\your\file.csv'with (fieldterminator = ',',rowterminator = '\n',firstrow = 2);
csv , txt, openrowset, xml.
  craete table products (productid int primary key, productname  varchar(50), price decimal(10,2));
insert into products (productid, productname, price) values (1,'led',200.00), (2,'telephone', 3.00), (3,'table',86.00);
create table employees (empid int primary key,name varchar(50), email varchar(100) null ); create table employees (empid int primary key,name varchar(50)not null, email varchar(100) not null );
 alter table products add constraint uq_productname unique (productname);
select * from products w here price >100;
alter table products add categoryid int;
create table categories (categoryid int primary key, categoryname varchar(50) unique);
productid int identity (1,1)
bulk insert products from 'c:\data\products.txt' with(fieldterminator = ',', rowterminator = '\n', firstrow = 2);
alter table products add constraint fk_products_categories foreign key (categoryid) rferences categories (categoryid);
create table employees( empid int primary key, name varchar(50);    create table users (userid int primary key, email varchar(100)unique;
 alter table products add constraint chk_price_positive check (price>0);
alter table products add stock int not null default 0;
select productid, productname,isnull (price,0) as price,stock from products;
create table categories (categoryid int primary key,categoryname varchar (50));
create table customers (customerid int primary key, customername varchar(100),age int, constraint chk_customer_age check (age>=18));
create table orders (orderid int identity(100,10)primary key, customername varchar (100),order date);
create table orderdetails (orderid int,productid int,quantity int,price decimal(10,2),constraint pk_orderdetails primary key (orderid, productid));
select isnull (price,0) as finalprice from products;
create table employees (empid int primary key, fullname varchar(100), email varchar (100), hiredate date, constraint uq_employees_email unique (email));
create table orders (orderid int primary key,orderdate date,customerid int,constraint fk_orders_customers foreign key (customerid)references customers(customerid)on delete cascadeon update cascade);
































