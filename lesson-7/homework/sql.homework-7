select min(price) as min_price from products;
select max(salary) as max_salary from employees;
select count(*) as total_customers from customers;
select count(distinct category) as unique_categories from products;
select sum(saleamount) as total_sales from sales where productid = 7;
select avg(age) as average_age from employees;
select departmentname, count(*) as employee_count
from employees group by departmentname;
select category,min(price) as min_price,max(price) as max_price from products group by category;
select customerid,  sum(saleamount) as total_sales from sales group by customerid;
select deptid, count(*) as employee_count from employees group by deptid having count(*) > 5;
select category, sum(saleamount) as total_sales, avg(saleamount) as average_sales from sales group by category;
select count(*) as hr_employee_count rom employees where departmentname = 'HR';
select  departmentname, max(salary) as highest_salary, min(salary) as lowest_salary from employees group by departmentname;
select deptid,avg(salary) as average_salary from employees group by deptid;
select deptid, avg(salary) as avg_salary, count(*) as employee_count from employees group by deptid;
select category, avg(price) as avg_price from products group by category having avg(price) > 400;
select  year(saledate) as sales_year,sum(saleamount) as total_sales from sales group by year(saledate) order by sales_year;
select customerid, count(*) as total_orders  from orders group by customerid having count(*) >= 3;
select  deptid, avg(salary) as avg_salary from employees group by deptid having avg(salary) > 60000;
select  category, avg(price) as avg_price from products group by category having avg(price) > 150;
select  customerid, sum(saleamount) as total_sales from sales group by customerid having sum(saleamount) > 1500;
select  deptid, sum(salary) as total_salary, avg(salary) as average_salary from employees group by deptid having avg(salary) > 65000;
select  custid, sum(freight) as total_freight_over_50, min(freight) as least_purchase from tsql2012.sales.orders group by custid;
select year(orderdate) as order_year,  month(orderdate) as order_month, sum(saleamount) as total_sales, count(distinct productid) as unique_product from orders group by year(orderdate), month(orderdate) having count(distinct productid) >= 2;
CREATE TABLE Orders (OrderID INT PRIMARY KEY, OrderDate DATE, CustomerID INT, ProductID INT, Quantity INT ); INSERT INTO Orders (OrderID, OrderDate, CustomerID, ProductID, Quantity) VALUES (1, '2020-01-10', 101, 1, 3), (2, '2020-03-15', 102, 2, 5), (3, '2021-06-20', 103, 3, 2), (4, '2021-09-05', 104, 1, 10), (5, '2022-02-22', 105, 4, 1), (6, '2022-11-18', 106, 2, 8), (7, '2023-04-10', 107, 5, 4), (8, '2023-05-01', 108, 6, 6);












